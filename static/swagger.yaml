swagger: '2.0'
info:
  title: "Ecommerce API"
  description: "API that includes resources to manage an ecommerce website"
  version: "1.0.0"
host: "127.0.0.1:5000" #working on local host
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"

securityDefinitions:
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header
#routes
paths: 
#Login Path
  /customers/login: #specific URL endpoint
    post: #what kind of request you're sending
      tags:
        - Customer # creates a category for this route that can be reused on like routes
      summary: "Login endpoint (generates a token)"
      description: "Endpoint for user authentication and token generation."
      parameters:
        - in: "body"
          name: "body"
          description: "credentials for login (email and password)"
          required: true
          schema: 
            $ref: "#/definitions/LoginPayload"
      responses:
        200:
          description: "Login Successful"
          schema:
            $ref: '#/definitions/LoginResponse'
          examples:
            application/json:
              token: "fmksdfrkjdfrgvnjdnvg....."
              message: "successfully logged in"
              status: "success"

#GetAllCustomers Path
  /customers:
    get:
      tags:
        - Customer
      summary: "Retrieve a list of customer objects"
      description: "Endpont to retrieve all customers, requires token authentication"
      security:
        - bearerAuth:
      responses:
        200:
          description: "Successfully retrieved all customers"
          schema:
            $ref: "#/definitions/GetCustomersResponse"
          examples:
            application/json:
              name: "Delilah Ligma"
              email: "LDelilah12@email.com"
              phone: "321-968-5896"
              username: "DLigma"
              admin: 0

#GetAllProducts Path
  /products:
    get:
      tags:
        - Product
      summary: "Retrieve a list of product objects"
      description: "Endpont to retrieve all products, requires token authentication"
      responses:
        200:
          description: "Successfully retrieved all products"
          schema:
            $ref: "#/definitions/GetProductsResponse"
          examples:
            application/json:
              name: "Product 1"
              price: 100
              description: "Product 1 description"
              category: "Category 1"
              image: "image1.jpg"
              quantity: 10

#GetAllOrders Path
  /orders:
    get:
      tags:
        - Order
      summary: "Retrieve a list of order objects"
      description: "Endpont to retrieve all orders, requires token authentication"
      security:
        - bearerAuth:
      responses:
        200:
          description: "Successfully retrieved all orders"
          schema:
            $ref: "#/definitions/GetOrdersResponse"
          examples:
            application/json:
              order_id: 1
              customer_id: 1
              product_id: 1
              quantity: 1
              total: 100
              status: "pending"


#Payloads and Responses
definitions: 
#Login Definitions
  LoginPayload:
    type: "object" #sending a JSON object
    properties: 
      email:
        type: "string"
        description: "email"
      password:
        type: "string"
        description: "password"
    required:
      - "email"
      - "password"

  LoginResponse:
    type: "object"
    properties:
      token:
        type: "string"
        description: "Authentication token on successful login"
      message:
        type: "string"
        description: "Message indicating success or failure"
      status:
        type: "status"
        description: "Status of operation"
    required:
      - "message"
      - "status"

#Get all customers Definitions

  GetCustomersResponse:
    type: "object"
    properties:
      name: 
        type: "string"
        desciption: "Customer name"
      phone:
        type: "string"
        desciption: "Customer phone"
      email:
        type: "string"
        desciption: "Customer email"
      password:
        type: "string"
        desciption: "Customer password"
      username:
        type: "string"
        desciption: "Customer username"
      admin:
        type: "integer"
        description: "Admin permission"

#Get all products Definitions

  GetProductsResponse:
    type: "object"
    properties:
      name: 
        type: "string"
        desciption: "Product name"
      price:
        type: "integer"
        desciption: "Product price"
      description:
        type: "string"
        desciption: "Product description"
      category:
        type: "string"
        desciption: "Product category"
      image:
        type: "string"
        desciption: "Product image"
      quantity:
        type: "integer"
        desciption: "Product quantity"

#Get all orders Definitions

  GetOrdersResponse:
    type: "object"
    properties:
      order_id:
        type: "integer"
        description: "Order ID"
      customer_id:
        type: "integer"
        description: "Customer ID"
      product_id:
        type: "integer"
        description: "Product ID"
      quantity:
        type: "integer"
        description: "Quantity of product"
      total:
        type: "integer"
        description: "Total price of order"
      status:
        type: "string"
        description: "Status of order"